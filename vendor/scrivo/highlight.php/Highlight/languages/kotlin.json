{"keywords":{"keyword":"val var get set class trait object open private protected public final enum if else do while for when break continue throw try catch finally import package is as in return fun override default companion reified inline volatile transient native Byte Short Char Int Long Boolean Float Double Void Unit Nothing","literal":"true false null"},"contains":[{"className":"comment","begin":"/\\*\\*","end":"\\*/","contains":[{"className":"doctag","begin":"@[A-Za-z]+"},{"begin":"\\b(a|an|the|are|I|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|like)\\b"},{"className":"doctag","begin":"(?:TODO|FIXME|NOTE|BUG|XXX):","relevance":0}],"relevance":0},{"className":"comment","begin":"//","end":"$","contains":[{"$ref":"#contains.0.contains.1"},{"className":"doctag","begin":"(?:TODO|FIXME|NOTE|BUG|XXX):","relevance":0}]},{"className":"comment","begin":"/\\*","end":"\\*/","contains":[{"$ref":"#contains.0.contains.1"},{"className":"doctag","begin":"(?:TODO|FIXME|NOTE|BUG|XXX):","relevance":0}]},{"className":"type","begin":"<","end":">","returnBegin":true,"excludeEnd":false,"relevance":0},{"className":"function","beginKeywords":"fun","end":"[(]|$","returnBegin":true,"excludeEnd":true,"keywords":"val var get set class trait object open private protected public final enum if else do while for when break continue throw try catch finally import package is as in return fun override default companion reified inline volatile transient native Byte Short Char Int Long Boolean Float Double Void Unit Nothing","illegal":"fun\\s+(<.*>)?[^\\s\\(]+(\\s+[^\\s\\(]+)\\s*=","relevance":5,"contains":[{"begin":"[a-zA-Z_]\\w*\\s*\\(","returnBegin":true,"relevance":0,"contains":[{"className":"title","begin":"[a-zA-Z_]\\w*","relevance":0}]},{"className":"type","begin":"<","end":">","keywords":"reified","relevance":0},{"className":"params","begin":"\\(","end":"\\)","keywords":"val var get set class trait object open private protected public final enum if else do while for when break continue throw try catch finally import package is as in return fun override default companion reified inline volatile transient native Byte Short Char Int Long Boolean Float Double Void Unit Nothing","relevance":0,"illegal":"\\([^\\(,\\s:]+,","contains":[{"className":"type","begin":":\\s*","end":"\\s*[=\\)]","excludeBegin":true,"returnEnd":true,"relevance":0}]},{"$ref":"#contains.1"},{"$ref":"#contains.2"}]},{"className":"class","beginKeywords":"class trait","end":"[:\\{(]|$","excludeEnd":true,"illegal":"extends implements","contains":[{"$ref":"#contains.4.contains.0.contains.0"},{"className":"type","begin":"<","end":">","excludeBegin":true,"excludeEnd":true,"relevance":0},{"className":"type","begin":"[,:]\\s*","end":"[<\\(,]|$","excludeBegin":true,"returnEnd":true}]},{"className":"variable","beginKeywords":"var val","end":"\\s*[=:$]","excludeEnd":true},{"className":"string","begin":"\"","end":"\"","illegal":"\\n","contains":[{"begin":"\\\\[\\s\\S]","relevance":0}]},{"className":"meta","begin":"^#!/usr/bin/env","end":"$","illegal":"\n"},{"className":"number","begin":"(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)","relevance":0}]}
