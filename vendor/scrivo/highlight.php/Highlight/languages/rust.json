{"aliases":["rs"],"keywords":{"keyword":"alignof as be box break const continue crate do else enum extern false fn for if impl in let loop match mod mut offsetof once priv proc pub pure ref return self Self sizeof static struct super trait true type typeof unsafe unsized use virtual while where yield int i8 i16 i32 i64 uint u8 u32 u64 float f32 f64 str char bool","literal":"true false","built_in":"Copy Send Sized Sync Drop Fn FnMut FnOnce drop Box ToOwned Clone PartialEq PartialOrd Eq Ord AsRef AsMut Into From Default Iterator Extend IntoIterator DoubleEndedIterator ExactSizeIterator Option Some None Result Ok Err SliceConcatExt String ToString Vec assert! assert_eq! bitflags! bytes! cfg! col! concat! concat_idents! debug_assert! debug_assert_eq! env! panic! file! format! format_args! include_bin! include_str! line! local_data_key! module_path! option_env! print! println! select! stringify! try! unimplemented! unreachable! vec! write! writeln!"},"lexemes":"[a-zA-Z]\\w*!?","illegal":"</","contains":[{"className":"comment","begin":"//","end":"$","contains":[{"begin":"\\b(a|an|the|are|I|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|like)\\b"},{"className":"doctag","begin":"(?:TODO|FIXME|NOTE|BUG|XXX):","relevance":0}]},{"className":"comment","begin":"/\\*","end":"\\*/","contains":[{"$ref":"#contains.0.contains.0"},{"className":"doctag","begin":"(?:TODO|FIXME|NOTE|BUG|XXX):","relevance":0},"self","self"]},{"className":"string","begin":"\"","end":"\"","illegal":null,"contains":[{"begin":"\\\\[\\s\\S]","relevance":0},{"className":"subst","begin":"\\\\[abfnrtv]\\|\\\\x[0-9a-fA-F]*\\\\\\|%[-+# *.0-9]*[dioxXucsfeEgGp]","relevance":0},{"className":"subst","begin":"\\\\[abfnrtv]\\|\\\\x[0-9a-fA-F]*\\\\\\|%[-+# *.0-9]*[dioxXucsfeEgGp]","relevance":0}]},{"className":"string","variants":[{"begin":"r(#*)\".*?\"\\1(?!#)"},{"begin":"'\\\\?(x\\w{2}|u\\w{4}|U\\w{8}|.)'"}]},{"className":"symbol","begin":"'[a-zA-Z_][a-zA-Z0-9_]*"},{"className":"number","variants":[{"begin":"\\b0b([01_]+)([uif](8|16|32|64|size))?"},{"begin":"\\b0o([0-7_]+)([uif](8|16|32|64|size))?"},{"begin":"\\b0x([A-Fa-f0-9_]+)([uif](8|16|32|64|size))?"},{"begin":"\\b(\\d[\\d_]*(\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)([uif](8|16|32|64|size))?"}],"relevance":0},{"className":"function","beginKeywords":"fn","end":"(\\(|<)","excludeEnd":true,"contains":[{"className":"title","begin":"[a-zA-Z_]\\w*","relevance":0}]},{"className":"meta","begin":"#\\!?\\[","end":"\\]"},{"className":"class","beginKeywords":"type","end":"(=|<)","contains":[{"$ref":"#contains.6.contains.0"}],"illegal":"\\S"},{"className":"class","beginKeywords":"trait enum","end":"{","contains":[{"className":"title","begin":"[a-zA-Z_]\\w*","relevance":0,"endsParent":true}],"illegal":"[\\w\\d]"},{"begin":"[a-zA-Z]\\w*::","keywords":{"built_in":"Copy Send Sized Sync Drop Fn FnMut FnOnce drop Box ToOwned Clone PartialEq PartialOrd Eq Ord AsRef AsMut Into From Default Iterator Extend IntoIterator DoubleEndedIterator ExactSizeIterator Option Some None Result Ok Err SliceConcatExt String ToString Vec assert! assert_eq! bitflags! bytes! cfg! col! concat! concat_idents! debug_assert! debug_assert_eq! env! panic! file! format! format_args! include_bin! include_str! line! local_data_key! module_path! option_env! print! println! select! stringify! try! unimplemented! unreachable! vec! write! writeln!"}},{"begin":"->"}]}
